{"version":3,"sources":["Components/Control/Control.module.scss","Components/Timer/Timer.module.scss","Components/Container/Container.module.scss","Components/ControlsList/ControlList.module.scss","Components/Container/Container.jsx","helpers/calculateTime.js","Components/Control/Control.jsx","Components/ControlsList/ControlsList.jsx","Components/Timer/Timer.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","pad","value","String","padStart","calculateTime","time","hours","Math","floor","minutes","seconds","Control","control","button","type","defaultProps","controls","propTypes","onClick","PropTypes","func","arrayOf","string","Controls","map","item","Timer","useState","setControls","setTime","subId","setSubId","wait","setWait","arrayOfTimestamp","setArrayOfTimestamp","lengthArrayOfTimestamp","delayForWaitButton","interval$","interval","formatedTime","resetTimer","useCallback","resetMainSubscribe","unsubscribe","resetWaitSubscribe","useEffect","length","title","clock","ControlsList","e","preventDefault","target","nodeName","innerText","subscribeId","subscribe","prev","splice","pipe","timestamp","take","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aa9d1e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Control_control__YCUeP\",\"button\":\"Control_button__3srzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Timer_title__tPXTB\",\"clock\":\"Timer_clock__1vP93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Q5t-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"ControlList_controls__wEGTX\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","const pad = (value) => {\r\n  return String(value).padStart(2, \"0\");\r\n}\r\n\r\nconst calculateTime = (time) => {\r\n\r\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n  const minutes = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const seconds = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nexport default calculateTime;","import PropTypes from \"prop-types\";\r\nimport styles from \"./Control.module.scss\";\r\n\r\nconst Control = ({ value }) => {\r\n  return (\r\n    <li className={styles.control}>\r\n      <button className={styles.button} type=\"button\">\r\n        {value}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nControl.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Control;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport Control from '../Control';\r\nimport styles from \"./ControlList.module.scss\";\r\n\r\nconst Controls = ({ onClick, controls }) => {\r\n  return (\r\n    <ul className={styles.controls} onClick={onClick}>\r\n      {controls.map((item) => {\r\n        return (\r\n          <Control key={item} value={item} />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nControl.defaultProps = {\r\n  controls: [],\r\n};\r\n\r\nControl.propTypes = {\r\n  onClick: PropTypes.func,\r\n  controls: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\n\r\nexport default Controls;\r\n","import { useEffect, useState, useCallback} from 'react';\r\nimport { interval } from 'rxjs';\r\nimport { timestamp, take } from 'rxjs/operators';\r\n\r\nimport calculateTime from '../../helpers/calculateTime';\r\nimport ControlsList from '../ControlsList';\r\nimport styles from \"./Timer.module.scss\";\r\n\r\nconst  Timer = () => {\r\n  const [controls, setControls] = useState([\"Start\", \"Wait\", \"Reset\"]);\r\n  const [time, setTime] = useState(0);\r\n  const [subId, setSubId] = useState(null);\r\n  const [wait, setWait] = useState(null);\r\n  const [arrayOfTimestamp, setArrayOfTimestamp] = useState([]);\r\n\r\n  const delayForWaitButton = 300;\r\n  const intervalStep = 16;\r\n  const lengthArrayOfTimestamp = Math.floor(delayForWaitButton / intervalStep);\r\n  const interval$ = interval(intervalStep);\r\n  const formatedTime = calculateTime(time);\r\n\r\n  const resetTimer = useCallback(() => {\r\n    setTime(0);\r\n  }, []);\r\n\r\n  const resetMainSubscribe = useCallback(() => {\r\n    subId && subId.unsubscribe();\r\n    setSubId(null);\r\n  }, [subId]);\r\n\r\n  const resetWaitSubscribe = useCallback(() => {\r\n    wait && wait.unsubscribe();\r\n    setWait(null);\r\n  }, [wait]);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.nodeName === \"BUTTON\" && e.target.innerText === \"Start\") {\r\n      const subscribeId = interval$.subscribe(() => setTime((prev) => prev + intervalStep));\r\n      setControls([[\"Stop\"], ...controls.splice(1)]);\r\n      setSubId(subscribeId);\r\n    }\r\n    if (e.target.nodeName === \"BUTTON\" && e.target.innerText === \"Stop\") {\r\n      setControls([[\"Start\"], ...controls.splice(1)]);\r\n      resetMainSubscribe();\r\n      resetTimer();\r\n    }\r\n    \r\n    if (e.target.nodeName === \"BUTTON\" && e.target.innerText === \"Wait\") {\r\n      \r\n\r\n      if (wait && arrayOfTimestamp.length) {\r\n        setControls([[\"Start\"], ...controls.splice(1)]);\r\n        resetWaitSubscribe();\r\n        resetMainSubscribe();\r\n      } else {\r\n        setArrayOfTimestamp(() => []);\r\n        const takeTimestamp = interval$.pipe(timestamp(), take(lengthArrayOfTimestamp));\r\n        const subscribeId = takeTimestamp.subscribe((value) =>\r\n          setArrayOfTimestamp((prev) => [...prev, value])\r\n        );\r\n        setWait(() => subscribeId);\r\n      }\r\n    }\r\n    if (e.target.nodeName === \"BUTTON\" && e.target.innerText === \"Reset\") {\r\n      resetTimer();\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (wait && arrayOfTimestamp.length === lengthArrayOfTimestamp) {\r\n      resetWaitSubscribe();\r\n    }\r\n  }, [wait, arrayOfTimestamp, lengthArrayOfTimestamp, resetWaitSubscribe]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      resetMainSubscribe();\r\n    };\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>TIMER</h2>\r\n      <div className={styles.clock}>{formatedTime}</div>\r\n      <ControlsList onClick={handleClick} controls={controls} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n\r\n\r\n\r\n","\nimport './App.css';\nimport Container from './Components/Container';\nimport Timer from './Components/Timer';\n\n\n\n\nconst App = () => {\n\n  return (\n    <Container>\n      <Timer />\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport \"./main.styles.scss\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}